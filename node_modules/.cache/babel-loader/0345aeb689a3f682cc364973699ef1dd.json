{"ast":null,"code":"// import MetaMaskOnboarding from '/node_modules/@metamask/onboarding'\n//1. connect metamask to site, get user's address\n\n/* global Web3, web3, ethereum */\nconst Web3 = require('web3');\n\nvar account = null;\nvar contract = null;\nconst minterKey = \"2e1e2cc4e364074a89c6c5083171ad52ae83f3fcf3ba4e7d2bc1eb62226bbca8\";\nconst ABI = [{\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"_logic\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"admin_\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"bytes\",\n    \"name\": \"_data\",\n    \"type\": \"bytes\"\n  }],\n  \"stateMutability\": \"payable\",\n  \"type\": \"constructor\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": false,\n    \"internalType\": \"address\",\n    \"name\": \"previousAdmin\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"address\",\n    \"name\": \"newAdmin\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"AdminChanged\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"beacon\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"BeaconUpgraded\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"implementation\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"Upgraded\",\n  \"type\": \"event\"\n}, {\n  \"stateMutability\": \"payable\",\n  \"type\": \"fallback\"\n}, {\n  \"inputs\": [],\n  \"name\": \"admin\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"admin_\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"newAdmin\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"changeAdmin\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"implementation\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"implementation_\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"newImplementation\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"upgradeTo\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"newImplementation\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"bytes\",\n    \"name\": \"data\",\n    \"type\": \"bytes\"\n  }],\n  \"name\": \"upgradeToAndCall\",\n  \"outputs\": [],\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"stateMutability\": \"payable\",\n  \"type\": \"receive\"\n}];\nconst ADDRESS = \"0x55d794d299Ab66303e4fB2Ca95B74a971481C441\";\n\nif (window.ethereum) {\n  window.web3 = new Web3(window.ethereum);\n  contract = new web3.eth.Contract(ABI, ADDRESS);\n}\n\nconst connect = async (mintButton, burnButton, connectButton, amount, wallet, balance, circulation) => {\n  console.log(\"Ran Through Connect\");\n\n  try {\n    await ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    connectButton.style.display = \"none\";\n  } catch (error) {\n    console.error(error);\n  }\n\n  checkStatus(mintButton, burnButton, connectButton, amount, wallet, balance, circulation);\n};\n\nconst checkStatus = async (mintButton, burnButton, connectButton, amount, wallet, balance, circulation) => {\n  var accounts = await web3.eth.getAccounts();\n  account = accounts[0];\n  console.log(\"Ran through CheckStatus\");\n\n  if (accounts.length == 0) {\n    console.log(\"Account Length = 0\");\n    connectButton.style.display = \"box\";\n\n    connectButton.onclick = () => {\n      connect(mintButton, burnButton, connectButton, amount, wallet, balance, circulation);\n    };\n  } else {\n    mintButton.onclick = () => {\n      const txObject = contract.methods.mint(account, amount);\n      var signedTx;\n      web3.eth.accounts.signTransaction(txObject, minterKey).then(response => {\n        signedTx = response.rawTransaction;\n      });\n      web3.eth.sendSignedTransaction(signedTx);\n    };\n\n    burnButton.onclick = () => {};\n  }\n};\n\nconst fixValues = async (wallet, balance, circulation) => {\n  var accounts = await web3.eth.getAccounts();\n  account = accounts[0];\n  wallet.innerHTML = \"Wallet\" + account;\n  contract.methods.balanceOf(account).call().then(result => {\n    balance.innerHTML = \"Balance: \" + result + \" MC\";\n  });\n  contract.methods.totalSupply().call().then(result => {\n    circulation.innerHTML = result + \" MC\";\n  });\n};\n\nexport { checkStatus, fixValues };","map":{"version":3,"sources":["/Users/marcteoong/Desktop/MarcMinter/src/components/Backend.js"],"names":["Web3","require","account","contract","minterKey","ABI","ADDRESS","window","ethereum","web3","eth","Contract","connect","mintButton","burnButton","connectButton","amount","wallet","balance","circulation","console","log","request","method","style","display","error","checkStatus","accounts","getAccounts","length","onclick","txObject","methods","mint","signedTx","signTransaction","then","response","rawTransaction","sendSignedTransaction","fixValues","innerHTML","balanceOf","call","result","totalSupply"],"mappings":"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","sourcesContent":["// import MetaMaskOnboarding from '/node_modules/@metamask/onboarding'\n//1. connect metamask to site, get user's address\n/* global Web3, web3, ethereum */\nconst Web3 = require('web3');\n\nvar account = null;\nvar contract = null;\nconst minterKey = \"2e1e2cc4e364074a89c6c5083171ad52ae83f3fcf3ba4e7d2bc1eb62226bbca8\";\n\nconst ABI = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}];\nconst ADDRESS = \"0x55d794d299Ab66303e4fB2Ca95B74a971481C441\";\n\n\nif (window.ethereum) {\n   window.web3 = new Web3(window.ethereum);\n   contract = new web3.eth.Contract(ABI, ADDRESS);\n}\n\nconst connect = async (mintButton, burnButton, connectButton, amount, wallet, balance, circulation) => {\n    console.log(\"Ran Through Connect\");\n    try {\n      await ethereum.request({ method: 'eth_requestAccounts' });\n      connectButton.style.display = \"none\";\n   } catch (error) {\n      console.error(error);\n   }\n   checkStatus(mintButton, burnButton, connectButton, amount,wallet, balance, circulation);\n};\n\nconst checkStatus = async (mintButton, burnButton, connectButton, amount, wallet, balance, circulation) => {\n   var accounts = await web3.eth.getAccounts();\n   account = accounts[0];\n   console.log(\"Ran through CheckStatus\");\n   if (accounts.length == 0){\n      console.log(\"Account Length = 0\");\n      connectButton.style.display = \"box\";\n      connectButton.onclick = () => {\n        connect(mintButton, burnButton, connectButton, amount, wallet, balance, circulation);\n      }\n   } else {\n      mintButton.onclick = () => {\n        const txObject = contract.methods.mint(account, amount);\n        var signedTx;\n        web3.eth.accounts.signTransaction(txObject, minterKey).then((response) => {\n            signedTx = response.rawTransaction;\n        });\n        web3.eth.sendSignedTransaction(signedTx);\n      }\n\n      burnButton.onclick = () => {\n\n      }\n   }\n}\n\nconst fixValues = async (wallet, balance, circulation) => {\n    var accounts = await web3.eth.getAccounts();\n    account = accounts[0];\n    wallet.innerHTML = \"Wallet\" + account;\n\n    contract.methods.balanceOf(account).call().then((result) => {\n        balance.innerHTML = \"Balance: \" + result + \" MC\"\n     })\n    \n    contract.methods.totalSupply().call().then((result) => {\n       circulation.innerHTML = result + \" MC\";\n    })\n }\n\nexport {checkStatus, fixValues};"]},"metadata":{},"sourceType":"module"}